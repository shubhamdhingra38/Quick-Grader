{"version":3,"sources":["components/static/images/logo.png","components/static/images/copyright.png","components/static/images/loading.png","components/static/images/csv.png","components/static/images/student.jpg","components/static/images/teacher.jpg","components/Profile/ProfilePicture.jsx","components/Profile/Profile.jsx","api.js","components/Main.jsx","components/Footer.jsx","components/Home.jsx","components/Test/Quiz.jsx","components/Test/TakeTest.jsx","components/Test/CreateTest.jsx","components/About/About.jsx","components/Test/Response.jsx","components/Dashboard/Plagiarism.jsx","components/Dashboard/AutoGrade.jsx","components/Test/Test.jsx","components/Dashboard/CreatedTests.jsx","components/Dashboard/GenerateReport.jsx","components/Auth/Login.jsx","components/Auth/Logout.jsx","components/Auth/Register.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","profilePicture","width","height","opacity","imageOverlay","position","top","bottom","left","right","transition","background","borderRadius","border","boxShadow","imageContainer","overlayIcon","ProfilePicture","imageURL","setImageURL","setSelectedFile","selectedFile","classes","htmlFor","accept","id","multiple","type","style","display","onChange","event","file","target","files","URL","createObjectURL","className","Avatar","src","color","domain","api","profile_url","stripTrailingSlash","str","substr","length","Profile","props","useEffect","setTitle","React","useState","loaded","firstname","lastname","userInfo","setUserInfo","handleChange","name","value","prevState","token","fetch","method","headers","Authorization","then","result","json","console","log","image","informationSection","form","noValidate","autoComplete","Grid","container","spacing","item","direction","sm","md","xs","TextField","label","multiline","desc","rows","fullWidth","placeholder","profileInputElement","InputProps","formInput","InputLabelProps","shrink","formLabels","key","select","SelectProps","native","selectInput","map","option","dob","Button","onClick","formData","FormData","Object","keys","forEach","index","append","body","Container","Typography","userinfo_url","theme","root","logoPic","margin","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","paddingTop","navIcon","mainContent","padding","fontWeight","fontSize","desgination","topElements","icon","HomeIcon","displayAlways","loginRequired","url","InfoIcon","AccountBoxIcon","dashboardElements","Faculty","AddIcon","CreateIcon","GroupWorkIcon","FindInPageIcon","AssessmentIcon","Student","NoteAddIcon","bottomElements","VpnKeyIcon","ExitToAppIcon","ListOfItems","items","subheader","isLoggedIn","history","renderDivider","i","element","List","disablePadding","ListSubheader","component","ListItem","button","push","ListItemText","primary","Divider","withRouter","window","useTheme","profileInfo","setProfileInfo","mobileOpen","setMobileOpen","axios","get","res","data","handleDrawerToggle","require","group","marginTop","undefined","document","CssBaseline","AppBar","Toolbar","IconButton","aria-label","edge","variant","noWrap","title","Hidden","smUp","implementation","Drawer","anchor","open","onClose","paper","ModalProps","keepMounted","xsDown","Footer","Home","paragraph","quiz_url","question_url","answer_url","choice_url","Choices","selected","setSelected","handleSelect","split","setAnswers","oldState","choiceElements","localChoices","ele","choice","globalChoices","ListGroup","Item","checked","Answer","Form","Group","Label","Control","answers","as","defaults","xsrfHeaderName","Quiz","questions","setQuestions","choices","setChoices","loading","setLoading","redirect","setRedirect","unmounted","setUnmounted","oldObj","oldArray","choiceId","promises","Promise","all","choice_text","getChoices","questions_list","idx","problem","to","pathname","state","alertMsg","minHeight","description","ans","response_id","responseId","question_id","short_ans","choice_id","parseInt","post","statusText","catch","err","response","preventDefault","response_url","TakeTest","code","submitted","status","setStatus","quizDetail","setQuizDetail","setResponse","didMount","setDidMount","alert","useAlert","onSubmit","locked","show","timeout","test","borderWidth","backgroundColor","ShortAnswerQuestion","required","MultipleChoiceQuestion","handleKeyPress","charCode","oldValue","JSON","parse","stringify","questionText","question","onKeyPress","Card","AddQuestions","inputs","setInputs","allowSubmit","setAllowSubmit","maxMarks","setMaxMarks","errorMsg","setErrorMsg","Array","from","choiceAnswer","inputElements","alertElements","Alert","dismissible","Heading","navigator","clipboard","writeText","concat","flag","property","oldMsg","isNaN","validate","quiz_code","maximum_score","is_answer","CreateTest","useRouteMatch","path","setDescription","redirectInfo","setRedirectInfo","controlId","Text","About","questionWithAnswer","choiceList","selectedChoice","borderBottom","paddingBottom","gradeButton","grade_url","Response","responseID","mapQuestionToAnswer","setMapQuestionToAnswer","grade","setGrade","answer","qID","error","ListQuestionsAnswers","choicesData","gradeInfo","updateResponse","initState","val","questionAnswers","QuestionWithAnswer","toString","ChoicesList","choicesList","divider","Choice","Plagiarism","setCode","invalid","setInvalid","AutoGrade","href","responseItem","cursor","testInfo","borderRight","selectedResponse","palette","success","main","maxWidth","nested","paddingLeft","xsrfCookieName","my_tests_url","lock_unlock_quiz_url","ViewResponses","selectedID","setSelectedID","responses","responseElements","e","setResponseID","taken_by","graded","total_score","Test","setLockStatus","setResponses","selectedResponseID","setSelectedResponseID","questionID","prevQuestions","params","quizID","localStorage","setItem","letterSpacing","size","object","ShowTests","testElements","CreatedTests","myTests","setMyTests","GenerateReport","responseType","Blob","link","createElement","setAttribute","appendChild","click","auth_url","flexDirection","alignItems","avatar","submit","Login","username","password","creds","setCreds","autoFocus","FormControlLabel","control","Checkbox","setToken","Logout","SignUp","errors","justify","Register","showSignUp","setShowSignUp","setType","class","flexWrap","App","setNewToken","removeItem","exact","render","Boolean","location","hostname","match","options","positions","BOTTOM_RIGHT","offset","transitions","SCALE","Root","template","AlertTemplate","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.dc0b6d40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b0e6dbb8.png\";","module.exports = __webpack_public_path__ + \"static/media/copyright.8247ead2.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.7c8b55d7.png\";","module.exports = __webpack_public_path__ + \"static/media/csv.183b9fc1.png\";","module.exports = __webpack_public_path__ + \"static/media/student.66904178.jpg\";","module.exports = __webpack_public_path__ + \"static/media/teacher.ffa87314.jpg\";","import React, { useEffect } from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\n\nconst useStyles = makeStyles({\n  profilePicture: {\n    width: \"100%\",\n    height: \"100%\",\n    \"&:hover\": {\n      opacity: \"0.5\",\n    },\n  },\n\n  imageOverlay: {\n    position: \"absolute\",\n    top: \"0\",\n    bottom: \"0\",\n    left: \"0\",\n    right: \"0\",\n    height: \"100%\",\n    width: \"100%\",\n    opacity: \"0\",\n    transition: \"0.5s ease\",\n    background: \"rgba(0, 0, 0, 0.5)\",\n    borderRadius: \"50%\",\n    border: \"3px solid red\",\n    boxShadow: \"0 0 1px 0px red inset, 0 0 1px 1px red\",\n    \"&:hover\": {\n      opacity: \"1\",\n    },\n  },\n\n  imageContainer: {\n    width: \"150px\",\n    height: \"150px\",\n    position: \"relative\",\n  },\n\n  overlayIcon: {\n    position: \"absolute\",\n    top: \"30%\",\n    left: \"15%\",\n    width: \"100px\",\n    height: \"50px\",\n  },\n});\n\nexport default function ProfilePicture({\n  imageURL,\n  setImageURL,\n  selectedFile,\n  setSelectedFile,\n}) {\n  const classes = useStyles();\n  const handleClick = (event) => {\n    //upload profile picture\n    let file = event.target.files[0];\n    setSelectedFile(file);\n    setImageURL(URL.createObjectURL(file));\n  };\n  return (\n    <>\n      <label htmlFor=\"profilePictureFile\">\n        <input\n          accept=\"image/*\"\n          id=\"profilePictureFile\"\n          multiple\n          type=\"file\"\n          style={{ display: \"none\" }}\n          onChange={handleClick}\n        />\n        <div className={classes.imageContainer}>\n          {imageURL ? (\n            <Avatar className={classes.profilePicture} src={imageURL} />\n          ) : (\n            <AccountCircleIcon className={classes.profilePicture} />\n          )}\n\n          <div className={classes.imageOverlay}>\n            <CameraAltIcon color=\"secondary\" className={classes.overlayIcon} />\n          </div>\n        </div>\n      </label>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ProfilePicture from \"./ProfilePicture\";\n\nconst domain = \"http://127.0.0.1:8000/\";\nconst api = {\n  profile_url: domain + \"auth/profile/\",\n};\n\nconst useStyles = makeStyles({});\n\nexport function stripTrailingSlash(str) {\n  if (str.substr(-1) === \"/\") {\n    return str.substr(0, str.length - 1);\n  }\n  return str;\n}\n\nexport default function Profile(props) {\n  useEffect(() => {\n    props.setTitle(\"Account - Update your Profile\");\n  }, []);\n\n  const classes = useStyles();\n  const [userInfo, setUserInfo] = React.useState({\n    loaded: false,\n    firstname: \"\",\n    lastname: \"\",\n  });\n  const [imageURL, setImageURL] = React.useState();\n  const [selectedFile, setSelectedFile] = React.useState();\n\n  const handleChange = (event) => {\n    let name = event.target.id;\n    let value = event.target.value;\n    setUserInfo((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = () => {\n    console.log(\"Updating data\");\n\n    let formData = new FormData();\n    Object.keys(userInfo).forEach((key, index) => {\n      if (key == \"image\") {\n        return;\n      }\n      formData.append(key, userInfo[key]);\n    });\n    if (selectedFile) {\n      formData.append(\"image\", selectedFile);\n    }\n\n    fetch(api.profile_url, {\n      method: \"put\",\n      headers: {\n        Authorization: `Token ${props.token}`,\n      },\n      body: formData,\n    })\n      .then((result) => result.json())\n      .then((result) => console.log(result));\n  };\n\n  const gender = [\n    {\n      value: \"M\",\n      label: \"Male\",\n    },\n    {\n      value: \"F\",\n      label: \"Female\",\n    },\n  ];\n\n  React.useEffect(() => {\n    if (props.token) {\n      fetch(api.profile_url, {\n        method: \"get\",\n        headers: {\n          Authorization: `Token ${props.token}`,\n        },\n      })\n        .then((result) => result.json())\n        .then((result) => {\n          console.log(result);\n          setUserInfo({ loaded: true, ...result });\n          if (result.image) {\n            setImageURL(stripTrailingSlash(domain) + result.image);\n          }\n        });\n    }\n  }, [props.token]);\n\n  const informationSection = userInfo.loaded ? (\n    <form className={classes.form} noValidate autoComplete=\"off\">\n      <Grid container spacing={2}>\n        <Grid container item direction=\"column\" sm={12} md={4}>\n          <Grid item xs={4}>\n            <ProfilePicture\n              imageURL={imageURL}\n              setImageURL={setImageURL}\n              selectedFile={selectedFile}\n              setSelectedFile={setSelectedFile}\n            />\n          </Grid>\n\n          <Grid item>\n            <TextField\n              id=\"desc\"\n              label=\"Description\"\n              multiline\n              value={userInfo.desc}\n              onChange={handleChange}\n              rows={2}\n              fullWidth={true}\n              placeholder=\"A little bit about yourself\"\n              className={classes.profileInputElement}\n              InputProps={{\n                className: classes.formInput,\n              }}\n              InputLabelProps={{\n                shrink: true,\n                className: classes.formLabels,\n              }}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container item sm={12} md={8} spacing={3}>\n          <Grid item xs={5}>\n            <TextField\n              id=\"firstname\"\n              key=\"firstname\"\n              label=\"First Name\"\n              value={userInfo.firstname}\n              onChange={handleChange}\n              className={classes.profileInputElement}\n              InputProps={{\n                className: classes.formInput,\n              }}\n              InputLabelProps={{ className: classes.formLabels }}\n            />\n          </Grid>\n          <Grid item xs={5}>\n            <TextField\n              id=\"lastname\"\n              key=\"lastname\"\n              label=\"Last Name\"\n              value={userInfo.lastname}\n              onChange={handleChange}\n              className={classes.profileInputElement}\n              InputProps={{\n                className: classes.formInput,\n              }}\n              InputLabelProps={{ className: classes.formLabels }}\n            />\n          </Grid>\n          <Grid item xs={5}>\n            <TextField\n              id=\"gender\"\n              select\n              label=\"Gender\"\n              onChange={handleChange}\n              SelectProps={{\n                native: true,\n                className: classes.selectInput,\n              }}\n              InputLabelProps={{\n                className: classes.formLabels,\n              }}\n            >\n              {gender.map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </TextField>\n          </Grid>\n          <Grid item xs={5}>\n            <TextField\n              id=\"dob\"\n              label=\"Birthday\"\n              type=\"date\"\n              value={userInfo.dob}\n              onChange={handleChange}\n              className={classes.profileInputElement}\n              InputProps={{\n                className: classes.formInput,\n              }}\n              InputLabelProps={{\n                shrink: true,\n                className: classes.formLabels,\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Button color=\"primary\" onClick={handleSubmit}>\n          Update\n        </Button>\n      </Grid>\n    </form>\n  ) : (\n    <p>Loading information...</p>\n  );\n\n  return (\n    <Container className={classes.body}>\n      <Typography color=\"secondary\">\n        Here, you can update your account information\n      </Typography>\n      <br />\n      {informationSection}\n    </Container>\n  );\n}\n","let domain\nexport default domain = 'http://quick-grader-backend.herokuapp.com/'\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport GroupWorkIcon from \"@material-ui/icons/GroupWork\";\nimport FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { withRouter } from \"react-router-dom\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { stripTrailingSlash } from \"./Profile/Profile\";\nimport domain from \"../api\";\n\nimport axios from \"axios\";\n\nconst drawerWidth = 240;\n\nconst api = {\n  userinfo_url: domain + \"auth/user/\",\n  profile_url: domain + \"auth/profile/\",\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  logoPic: {\n    width: 100,\n    height: 50,\n    margin: theme.spacing(2),\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    background: \"black\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    paddingTop: theme.spacing(3),\n  },\n  navIcon: {\n    marginRight: theme.spacing(1),\n  },\n  mainContent: {\n    padding: theme.spacing(4),\n  },\n  name: {\n    fontWeight: \"bold\",\n    fontSize: \"16px\",\n    padding: \"5px\",\n  },\n\n  desgination: {\n    color: \"red\",\n  },\n}));\n\nconst topElements = [\n  {\n    name: \"Home\",\n    icon: HomeIcon,\n    displayAlways: true,\n    loginRequired: false,\n    url: \"/home\",\n  },\n  { name: \"About\", icon: InfoIcon, loginRequired: false, url: \"/about\" },\n  {\n    name: \"Account\",\n    icon: AccountBoxIcon,\n    loginRequired: true,\n    url: \"/account\",\n  },\n];\n\nconst dashboardElements = {\n  Faculty: [\n    {\n      name: \"Create Test\",\n      icon: AddIcon,\n      loginRequired: true,\n      url: \"/create-test\",\n    },\n    {\n      name: \"Grade Manually\",\n      icon: CreateIcon,\n      loginRequired: true,\n      url: \"/dashboard/created-tests\",\n    },\n    {\n      name: \"Grade [Cluster]\",\n      icon: GroupWorkIcon,\n      loginRequired: true,\n      url: \"\",\n    },\n    { name: \"Plagiarism\", icon: FindInPageIcon, loginRequired: true, url: \"\" },\n    {\n      name: \"Download Report\",\n      icon: AssessmentIcon,\n      loginRequired: true,\n      url: \"/dashboard/generate-report\",\n    },\n  ],\n\n  Student: [\n    {\n      name: \"Take Test\",\n      icon: NoteAddIcon,\n      loginRequired: true,\n      url: \"/take-test\",\n    },\n  ],\n};\n\nconst bottomElements = [\n  { name: \"Sign In\", icon: VpnKeyIcon, loginRequired: false, url: \"/login\" },\n  {\n    name: \"Register\",\n    icon: AccountBoxIcon,\n    loginRequired: false,\n    url: \"/register\",\n  },\n  {\n    name: \"Sign Out\",\n    icon: ExitToAppIcon,\n    loginRequired: true,\n    url: \"/logout\",\n  },\n];\n\nfunction ListOfItems({ items, subheader, isLoggedIn, history }) {\n  const classes = useStyles();\n  let renderDivider = false;\n  for (let i = 0; i < items.length; ++i) {\n    let element = items[i];\n    if (\n      element.displayAlways ||\n      (isLoggedIn && element.loginRequired) ||\n      (!isLoggedIn && !element.loginRequired)\n    ) {\n      renderDivider = true;\n      break;\n    }\n  }\n  return (\n    <>\n      <List\n        disablePadding\n        subheader={\n          <ListSubheader component=\"div\" id={`${subheader}-list-subheader`}>\n            {subheader}\n          </ListSubheader>\n        }\n      >\n        {items.map((element, index) =>\n          element.displayAlways ||\n          (isLoggedIn && element.loginRequired) ||\n          (!isLoggedIn && !element.loginRequired) ? (\n            <ListItem\n              button\n              key={element.name}\n              onClick={() => {\n                history.push(element.url);\n              }}\n            >\n              {<element.icon className={classes.navIcon} />}\n              <ListItemText primary={element.name} />\n            </ListItem>\n          ) : null\n        )}\n      </List>\n      {renderDivider && <Divider />}\n    </>\n  );\n}\n\nfunction Main(props) {\n  const { window, history } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [userInfo, setUserInfo] = React.useState();\n  const [profileInfo, setProfileInfo] = React.useState();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const isLoggedIn = props.token ? true : false;\n\n  React.useEffect(() => {\n    if (props.token) {\n      console.log(\"sending request\");\n      axios\n        .get(api.userinfo_url, {\n          headers: {\n            Authorization: `Token ${props.token}`,\n          },\n        })\n        .then((res) => {\n          setUserInfo(res.data);\n        });\n\n      axios\n        .get(api.profile_url, {\n          headers: {\n            Authorization: `Token ${props.token}`,\n          },\n        })\n        .then((res) => setProfileInfo(res.data));\n    }\n  }, [props.token]);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        <img\n          className={classes.logoPic}\n          src={require(\"./static/images/logo.png\")}\n        />\n      </div>\n\n      <Divider />\n      <ListOfItems\n        items={topElements}\n        isLoggedIn={isLoggedIn}\n        history={history}\n      />\n\n      {userInfo && (\n        <ListOfItems\n          items={dashboardElements[userInfo.group]}\n          isLoggedIn={isLoggedIn}\n          history={history}\n        />\n      )}\n\n      <ListOfItems\n        items={bottomElements}\n        isLoggedIn={isLoggedIn}\n        history={history}\n      />\n\n      {isLoggedIn && (\n        <div\n          style={{\n            marginLeft: \"8px\",\n            marginTop: \"8px\",\n          }}\n        >\n          <p>Currently signed in as:</p>\n          <Avatar\n            style={{\n              width: 60,\n              height: 60,\n            }}\n            src={\n              profileInfo ? stripTrailingSlash(domain) + profileInfo.image : \"\"\n            }\n          />\n          {profileInfo && userInfo && (\n            <>\n              <span className={classes.name}>{profileInfo.firstname}</span>\n              <span className={classes.desgination}>({userInfo.group})</span>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            {props.title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer}>\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n    </div>\n  );\n}\n\nexport default withRouter(Main);\n","import React from \"react\"\nimport \"./Footer.css\"\n\nfunction Footer(){\n    return (\n     <>\n     </>\n    )\n}\n\nexport default Footer","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction Home(props) {\n  React.useEffect(() => {\n    props.setTitle(\"Home\");\n  }, []);\n  return (\n    <>\n      <Typography variant=\"h4\">Hello, world!</Typography>\n      <Typography paragraph>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Atque adipisci\n        at laudantium, ipsum tempora iusto ut unde nulla explicabo placeat\n        repudiandae velit rem molestias esse eos. Tenetur laudantium numquam\n        maxime?\n      </Typography>\n    </>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Container, ListGroup } from \"react-bootstrap\";\nimport \"./CreateTest.css\";\nimport domain from \"../../api\";\n\nconst api = {\n  quiz_url: domain + \"test/quiz/\",\n  question_url: domain + \"test/question/\",\n  answer_url: domain + \"test/answer/\",\n  choice_url: domain + \"test/choice/\",\n};\n\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nfunction Choices(props) {\n  const [selected, setSelected] = useState(-1);\n\n  const handleSelect = (event) => {\n    let [id, index] = event.target.id.split(\"-\");\n    setSelected(index);\n    props.setAnswers((oldState) => {\n      // let answer = props.choices[index];\n      return { ...oldState, [props.id]: [2, id] };\n    });\n  };\n\n  let choiceElements = props.localChoices.map((ele, index) => {\n    let choice = props.globalChoices[ele];\n    return (\n      <ListGroup.Item\n        key={`${props.id}-${index}`}\n        className={selected == index ? \"bg-info\" : null}\n      >\n        <div className=\"choice p-1 d-flex\" key={`${props.id}-${index}`}>\n          <input\n            type=\"radio\"\n            id={`${ele}-${index}`}\n            name={`choice-${props.id}`}\n            onChange={handleSelect}\n            checked={selected == index}\n          />\n          <label className=\"pl-3\" htmlFor=\"{`${props.id}-${index}`}\">\n            {choice}\n          </label>\n        </div>\n      </ListGroup.Item>\n    );\n  });\n  return <div>{choiceElements}</div>;\n}\n\nfunction Answer(props) {\n  return (\n    <Container>\n      <Form className=\"short-answer my-3\">\n        <Form.Group className=\"answer\">\n          <Form.Label>Answer:</Form.Label>\n          <Form.Control\n            className=\"p-2\"\n            value={props.answers[props.id][1]}\n            onChange={props.onChange}\n            as=\"textarea\"\n            rows=\"3\"\n            id={props.id}\n            name=\"answer\"\n          />\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n\nfunction Quiz(props) {\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [choices, setChoices] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n  const [unmounted, setUnmounted] = useState(false);\n\n  // console.log(props.location.state);\n\n  // when student types answer update\n  const handleChange = (event) => {\n    let value = event.target.value;\n    let id = event.target.id;\n    setAnswers((oldObj) => {\n      return { ...oldObj, [id]: [1, value] };\n    });\n  };\n\n  const getChoices = (data) => {\n    let choices = data.choices;\n    let promises = [];\n    let choiceId;\n    for (choiceId in choices) {\n      console.log(api.choice_url + choices[choiceId]);\n      promises.push(\n        axios.get(api.choice_url + choices[choiceId] + \"/\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${props.token}`,\n          },\n        })\n      );\n      // .then(res => {\n      //     choicesInfo.push([data.id, data.choices]);\n      // })\n      // .catch(err => console.log(err.response));\n    }\n    Promise.all(promises).then((res) => {\n      res.forEach((choice) => {\n        // choices.push([choice.data.id, choice.data.choice_text]);\n        setChoices((oldState) => {\n          return {\n            ...oldState,\n            [choice.data.id]: choice.data.choice_text,\n          };\n        });\n      });\n      // setQuestions(oldArray => [...oldArray, [data, choices]]);\n    });\n    // console.log(choices);\n  };\n\n  // console.log(questions);\n  // console.log(choices);\n\n  // get questions initially\n  useEffect(() => {\n    if (unmounted) return;\n    props.questions.forEach((id) => {\n      axios\n        .get(api.question_url + id + \"/\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${props.token}`,\n          },\n        })\n        .then((res) => {\n          setQuestions((oldArray) => [...oldArray, res.data]);\n          setAnswers((oldObj) => {\n            return { ...oldObj, [res.data.id]: [0, \"\"] };\n          });\n          if (res.data.type == 2) {\n            getChoices(res.data);\n          }\n        });\n    });\n    return () => setUnmounted(true);\n  }, []);\n\n  useEffect(() => {\n    if (unmounted) return;\n    if (Object.keys(answers).length == props.questions.length) {\n      setLoading(false);\n    }\n  }, [answers]);\n\n  // quiz is submitted\n  const handleSubmit = (event) => {\n    if (unmounted) return;\n    console.log(\"Submitted form...\");\n    console.log(answers);\n    for (const id in answers) {\n      console.log(id);\n      let type = answers[id][0];\n      let ans = answers[id][1];\n      let body;\n      if (type == 1) {\n        body = {\n          response_id: props.responseId,\n          question_id: id,\n          short_ans: ans,\n          choice_id: null,\n        };\n      } else {\n        body = {\n          response_id: props.responseId,\n          question_id: id,\n          short_ans: \"\",\n          choice_id: parseInt(ans),\n        };\n      }\n\n      axios\n        .post(api.answer_url, body, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${props.token}`,\n          },\n        })\n        .then((res) => {\n          console.log(res.statusText);\n        })\n        .catch((err) => console.log(err.response));\n    }\n    event.preventDefault();\n    setRedirect(true);\n  };\n\n  let questions_list = questions.map((data, idx) => {\n    if (data.type == 1) {\n      // Short answer\n      return (\n        <li\n          key={data.id}\n          className=\"my-3 list-group-item list-group-item-secondary\"\n        >\n          <span style={{ fontSize: \"1.2em\" }}>\n            Question {idx + 1}. {data.problem}\n          </span>\n          <Answer onChange={handleChange} answers={answers} id={data.id} />\n        </li>\n      );\n    } else {\n      // MCQ\n      return (\n        <li\n          key={data.id}\n          className=\"my-3 list-group-item list-group-item-secondary\"\n        >\n          <span style={{ fontSize: \"1.2em\" }}>\n            Question {idx + 1}. {data.problem}\n          </span>\n          <Choices\n            globalChoices={choices}\n            localChoices={data.choices}\n            setAnswers={setAnswers}\n            onChange={handleChange}\n            id={data.id}\n          />\n        </li>\n      );\n    }\n  });\n\n  if (redirect)\n    return (\n      <Redirect\n        to={{\n          pathname: \"/\",\n          state: {\n            alertMsg: \"Response has been successfully submitted!\",\n          },\n        }}\n      />\n    );\n\n  return (\n    <Container\n      className=\"border test-form mt-5 p-3\"\n      style={{ minHeight: \"50vh\", position: \"relative\" }}\n    >\n      <div className=\"info\">\n        <h3 className=\"display-3\">{props.title}</h3>\n        <p className=\"lead\">{props.description}</p>\n        <hr className=\"info-hr\" />\n        {/* Questions with input for answer */}\n        {loading ? (\n          \"Loading...\"\n        ) : (\n          <div>\n            <ul className=\"listgroup text-info p-0\">{questions_list}</ul>\n          </div>\n        )}\n      </div>\n      <div className=\"mt-5\">\n        <button\n          onClick={handleSubmit}\n          className=\"btn btn-md btn-warning\"\n          style={{\n            position: \"absolute\",\n            right: \"25px\",\n            bottom: \"10px\",\n            marginLeft: \"25px !important\",\n          }}\n        >\n          Submit\n        </button>\n      </div>\n    </Container>\n  );\n}\n\nexport default Quiz;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./TakeTest.css\";\nimport Quiz from \"./Quiz\";\nimport \"./CreateTest.css\";\nimport { Container } from \"react-bootstrap\";\nimport { useAlert } from \"react-alert\";\nimport domain from \"../../api\";\n\nconst api = {\n  quiz_url: domain + \"test/quiz/instance/\",\n  response_url: domain + \"test/response/\",\n};\n\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nfunction TakeTest(props) {\n  const [status, setStatus] = useState({ code: \"\", submitted: false });\n  const [quizDetail, setQuizDetail] = useState({});\n  const [response, setResponse] = useState();\n  const [didMount, setDidMount] = useState(false);\n  const alert = useAlert();\n\n  // console.log(props.token);\n\n  // can only create one response per test for a student\n  const createResponse = (id) => {\n    axios\n      .post(\n        api.response_url,\n        {\n          test: id,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${props.token}`,\n          },\n        }\n      )\n      .then((res) => {\n        // console.log(\"created response\");\n        // console.log(res.data);\n        setResponse(res.data.id);\n      })\n      .then((data) => {\n        setStatus({ ...status, submitted: true });\n      })\n      .catch((err) => {\n        console.log(err.response);\n        alert.show(\"You have already taken the test.\", {\n          type: \"error\",\n          timeout: 4000,\n        });\n      });\n  };\n\n  const handleChange = (event) => {\n    let value = event.target.value;\n    setStatus({ ...status, code: value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log(api.quiz_url + status.code + \"/\");\n    axios\n      .get(api.quiz_url + status.code + \"/\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${props.token}`,\n        },\n      })\n      .then((res) => {\n        if (res.data.locked) {\n          // console.log(\"Quiz is locked!\");\n          alert.show(\n            \"Sorry. No more responses are allowed, the quiz is locked.\",\n            {\n              type: \"error\",\n              timeout: 4000,\n            }\n          );\n        } else {\n          setQuizDetail({ data: res.data });\n          // create a new response\n          // console.log(res.data);\n          createResponse(res.data.id);\n        }\n      })\n      .catch((err) => {\n        // console.log(err);\n        alert.show(\"You entered an incorrect code!\", {\n          type: \"error\",\n          timeout: 4000,\n        });\n      });\n  };\n\n  useEffect(() => {\n    setDidMount(true);\n    return () => setDidMount(false);\n  }, []);\n\n  if (!didMount) return null;\n\n  return (\n    <Container>\n      {status.submitted ? (\n        <Quiz {...quizDetail.data} token={props.token} responseId={response} />\n      ) : (\n        <div className=\"body-text\">\n          <div>\n            <form onSubmit={handleSubmit}>\n              <div id=\"code-input\" className=\"text-white form-group\">\n                <label className=\"lead text-success\" htmlFor=\"invitation-code\">\n                  Invitation Code:{\" \"}\n                </label>\n                <div className=\"d-flex\">\n                  <input\n                    type=\"text\"\n                    id=\"invitation-code\"\n                    placeholder=\"Code here\"\n                    value={status.code}\n                    onChange={handleChange}\n                    className=\"row form-control\"\n                    style={{\n                      width: \"300px\",\n                      borderWidth: 2,\n                      backgroundColor: \"#00646421\",\n                    }}\n                  />\n                  <button className=\"btn btn-md ml-5 btn-success\">\n                    Submit\n                  </button>\n                </div>\n                <p\n                  id=\"help\"\n                  className=\"form-text text-muted\"\n                  style={{ fontSize: \"0.8rem\" }}\n                >\n                  *Enter the code shared by the teacher.\n                </p>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default TakeTest;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./TakeTest.css\";\nimport Quiz from \"./Quiz\";\nimport { Link, Route, Switch, useRouteMatch, Redirect } from \"react-router-dom\";\nimport \"./CreateTest.css\";\nimport { Form, Button, Alert, ListGroup, Card } from \"react-bootstrap\";\nimport Container from \"@material-ui/core/Container\";\nimport { useAlert } from \"react-alert\";\nimport domain from \"../../api\";\n\nconst api = {\n  quiz_url: domain + \"test/quiz/\",\n  choice_url: domain + \"test/choice/\",\n  response_url: domain + \"test/response/\",\n  question_url: domain + \"test/question/\",\n};\n\nfunction ShortAnswerQuestion(props) {\n  return (\n    <Container>\n      <Form className=\"short-answer my-3\">\n        {/* Question */}\n        <Form.Group className=\"question\">\n          <Form.Label>Question: {props.id}</Form.Label>\n          <Form.Control\n            className=\"p-2\"\n            value={props.questions[props.id][0]}\n            as=\"textarea\"\n            rows=\"3\"\n            id={props.id}\n            name=\"question\"\n            onChange={props.handleChange}\n            required\n          />\n        </Form.Group>\n\n        {/* Answer */}\n        <Form.Group className=\"answer\">\n          <Form.Label>Answer:</Form.Label>\n          <Form.Control\n            className=\"p-2\"\n            value={props.questions[props.id][1]}\n            as=\"textarea\"\n            rows=\"3\"\n            id={props.id}\n            name=\"answer\"\n            onChange={props.handleChange}\n            required\n          />\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n\nfunction MultipleChoiceQuestion(props) {\n  const handleKeyPress = (event) => {\n    // Enter key is pressed, add another choice\n    if (event.charCode == 13) {\n      props.setChoices((oldValue) => {\n        // deep copy\n        let [questionText, choices, selected] = JSON.parse(\n          JSON.stringify(oldValue[props.id])\n        );\n        choices.push(\"\");\n        return { ...oldValue, [props.id]: [questionText, choices, selected] };\n      });\n    }\n  };\n\n  const handleSelect = (event) => {\n    // Radio button select\n    let [id, index] = event.target.id.split(\"-\");\n    props.setChoices((oldValue) => {\n      let question = oldValue[id];\n      return { ...oldValue, [id]: [question[0], question[1], index] };\n    });\n  };\n\n  let choices = props.questions[props.id][1];\n  let selected = props.questions[props.id][2];\n  let choiceElements = choices.map((ele, index) => {\n    return (\n      <ListGroup.Item\n        key={`${props.id}-${index}`}\n        className={selected == index ? \"bg-success\" : null}\n      >\n        <div className=\"choice p-1\" key={`${props.id}-${index}`}>\n          <input\n            type=\"radio\"\n            id={`${props.id}-${index}`}\n            name={`choice-${props.id}`}\n            onChange={handleSelect}\n            checked={selected == index}\n            required\n          />\n          <input\n            type=\"text\"\n            value={ele}\n            id={`${props.id}-${index}`}\n            onChange={props.handleChange}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Choice Text\"\n            name=\"choice-text\"\n            className=\"texts\"\n            required\n          />\n        </div>\n      </ListGroup.Item>\n    );\n  });\n\n  return (\n    <Container className=\"multiple-choice\">\n      {/* Question */}\n      <Form className=\"question my-3\">\n        <Form.Group>\n          <Form.Label>Question {props.id}:</Form.Label>\n          <Form.Control\n            className=\"p-2\"\n            value={props.questions[props.id][0]}\n            as=\"textarea\"\n            rows=\"3\"\n            id={props.id}\n            name=\"question\"\n            onChange={props.handleChange}\n          />\n        </Form.Group>\n      </Form>\n      {/* <textarea className=\"p-2\" value={props.questions[props.id][0]} id=\"short-ques\" type=\"text\" id={props.id} */}\n      {/* rows=\"3\" style={{ width: \"90%\" }} name=\"question\" onChange={props.handleChange} /> */}\n      <Card style={{ width: \"18rem\" }}>\n        <ListGroup variant=\"flush\">{choiceElements}</ListGroup>\n      </Card>\n    </Container>\n  );\n}\n\nfunction AddQuestions(props) {\n  // console.log(props);\n  // Questions with Answer/Choices\n  const [questions, setQuestions] = useState({});\n  const [inputs, setInputs] = useState([]);\n  const [allowSubmit, setAllowSubmit] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const [maxMarks, setMaxMarks] = useState({});\n  const [errorMsg, setErrorMsg] = useState([]);\n\n  // console.log(maxMarks);\n  //   console.log(questions);\n\n  const addShortAnswer = () => {\n    if (!allowSubmit) {\n      setAllowSubmit(true);\n    }\n    let id = inputs.length + 1;\n    setInputs((oldState) =>\n      oldState.concat({\n        type: 1,\n        id: id,\n      })\n    );\n    setQuestions((oldState) => {\n      return { ...oldState, [id]: [\"\", \"\"] };\n    });\n  };\n  const addMCQ = () => {\n    if (!allowSubmit) {\n      setAllowSubmit(true);\n    }\n    let id = inputs.length + 1;\n    setInputs((oldState) =>\n      oldState.concat({\n        type: 2,\n        id: id,\n      })\n    );\n    setQuestions((oldState) => {\n      return { ...oldState, [id]: [\"\", [\"\"], -1] };\n    });\n  };\n\n  // for child components\n  const handleChange = (event) => {\n    let value = event.target.value;\n    if (event.target.name == \"question\") {\n      let id = event.target.id;\n      let question = Array.from(questions[id]);\n      if (question.length == 3) {\n        question = [value, question[1], question[2]];\n      } else {\n        question = [value, question[1]];\n      }\n      setQuestions((oldState) => {\n        return { ...oldState, [id]: question };\n      });\n    } else if (event.target.name == \"choice-text\") {\n      let [id, index] = event.target.id.split(\"-\");\n      setQuestions((oldState) => {\n        let [questionText, choices, choiceAnswer] = JSON.parse(\n          JSON.stringify(oldState[id])\n        );\n        choices[index] = value;\n        return { ...oldState, [id]: [questionText, choices, choiceAnswer] };\n      });\n    } else if (event.target.name == \"answer\") {\n      // answer\n      let id = event.target.id;\n      let question = Array.from(questions[id]);\n      question = [question[0], value];\n      setQuestions((oldState) => {\n        return { ...oldState, [id]: question };\n      });\n    } else if (event.target.name == \"max-score\") {\n      let id = event.target.id;\n      setMaxMarks((oldValue) => {\n        return { ...oldValue, [id]: value };\n      });\n    }\n  };\n\n  // form validation\n  const validate = () => {\n    let flag = false;\n    for (let property in questions) {\n      let question = questions[property];\n      if (question.length == 2 && question[1].split(\" \").length < 3) {\n        setErrorMsg((oldMsg) =>\n          oldMsg.concat([\n            \"The length of expected answer must be at least 3 words\",\n          ])\n        );\n        flag = true;\n      }\n      if (question.length == 3 && question[2] == -1) {\n        setErrorMsg((oldMsg) =>\n          oldMsg.concat([\"Every MCQ must have a selected answer\"])\n        );\n        flag = true;\n      }\n      if (question[0].split(\" \").length < 3) {\n        setErrorMsg((oldMsg) =>\n          oldMsg.concat([\"The length of question must be at least 3 words\"])\n        );\n        flag = true;\n      }\n      if (!maxMarks[property]) {\n        setErrorMsg((oldMsg) =>\n          oldMsg.concat([\"Maximum Marks field cannot be left empty\"])\n        );\n        flag = true;\n      } else if (isNaN(maxMarks[property])) {\n        setErrorMsg((oldMsg) =>\n          oldMsg.concat([\"Maximum Marks field must be a number\"])\n        );\n        flag = true;\n      }\n      if (flag) return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = (event) => {\n    if (!allowSubmit) {\n      setErrorMsg((oldMsg) =>\n        oldMsg.concat([\"You must add at least one question\"])\n      );\n      return;\n    }\n    let res = validate();\n    if (!res) {\n      return;\n    }\n    event.preventDefault();\n    // console.log(\"Submitted\");\n    // console.log(questions);\n\n    const code = props.code;\n\n    let type, problem, ans, choices;\n    for (let property in questions) {\n      //   console.log(property, \"property\");\n      let question = questions[property];\n      //   console.log(question);\n      if (question.length == 2) {\n        // Type 1 short answer\n        type = 1;\n        problem = question[0];\n        ans = question[1];\n      } else {\n        // Type 2 MCQ\n        type = 2;\n        problem = question[0];\n        ans = \"\"; // choice consists of isAnswer property already\n      }\n\n      //   console.log(\"maxscore\", maxMarks[property], maxMarks);\n      axios\n        .post(\n          api.question_url,\n          {\n            type: type,\n            problem: problem,\n            quiz_code: code,\n            ans: ans,\n            maximum_score: parseInt(maxMarks[property]),\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Token ${props.token}`,\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res.data);\n          if (res.data.type == 2) {\n            console.log(\"type 2\");\n            console.log(props.id);\n            type = 2;\n            problem = question[0];\n            choices = question[1];\n            ans = parseInt(question[2]); // index of answer\n            choices.forEach((ele, index) => {\n              axios\n                .post(\n                  api.choice_url,\n                  {\n                    question_id: res.data.id,\n                    choice_text: ele,\n                    is_answer: index == ans,\n                  },\n                  {\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                      Authorization: `Token ${props.token}`,\n                    },\n                  }\n                )\n                .then((result) => {\n                  console.log(result);\n                })\n                .catch((err) => console.log(err.response));\n            });\n          }\n        })\n        .catch((err) => console.log(err.response));\n    }\n    setRedirect(true);\n  };\n\n  let inputElements = inputs.map((value) => {\n    if (value.type == 1) {\n      return (\n        <div key={value.id}>\n          <ShortAnswerQuestion\n            token={props.token}\n            id={value.id}\n            questions={questions}\n            setQuestions={setQuestions}\n            handleChange={handleChange}\n          />\n\n          <div className=\"max-score mt-2 d-flex justify-content-end\">\n            <label htmlFor={`${value.id}`}>Maximum Marks:</label>\n            <input\n              onChange={handleChange}\n              className=\"ml-1\"\n              style={{ width: \"50px\", padding: 3 }}\n              type=\"text\"\n              name=\"max-score\"\n              id={`${value.id}`}\n              required\n            />\n          </div>\n          <hr />\n        </div>\n      );\n    }\n    return (\n      <div key={value.id}>\n        <MultipleChoiceQuestion\n          token={props.token}\n          id={value.id}\n          questions={questions}\n          setChoices={setQuestions}\n          handleChange={handleChange}\n        />\n        <div className=\"max-score mt-2 d-flex justify-content-end\">\n          <label htmlFor={`${value.id}`}>Maximum Marks:</label>\n          <input\n            onChange={handleChange}\n            className=\"ml-1\"\n            value={maxMarks[value.id]}\n            style={{ width: \"50px\" }}\n            type=\"text\"\n            name=\"max-score\"\n            id={`${value.id}`}\n          />\n        </div>\n        <hr />\n      </div>\n    );\n  });\n\n  let alertElements = errorMsg.map((ele) => {\n    return <li>{ele}</li>;\n  });\n\n  let alert =\n    errorMsg.length > 0 ? (\n      <Alert\n        variant=\"danger\"\n        onClose={() => {\n          setErrorMsg([]);\n        }}\n        dismissible\n      >\n        <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n        <ul className=\"ml-1\">{alertElements}</ul>\n      </Alert>\n    ) : null;\n\n  if (redirect)\n    return (\n      <Container className=\"invitation-code body-text ml-2\">\n        <p className=\"text-success font-cursive \">\n          Test has been successfully created!\n        </p>\n        <p className=\"font-cursive \">Share this code with students: </p>\n        <div className=\"code-share\">\n          <p\n            className=\"card\"\n            style={{\n              width: \"300px\",\n              borderWidth: 2,\n              backgroundColor: \"#00646421\",\n            }}\n          >\n            {props.code}\n          </p>\n          <button\n            className=\"btn btn-sm btn-success\"\n            onClick={() => navigator.clipboard.writeText(props.code)}\n          >\n            Copy\n          </button>\n        </div>\n      </Container>\n    );\n  return (\n    <Container>\n      {/* Error message */}\n      {alert}\n      <Container\n        className=\"border test-form p-3\"\n        style={{\n          position: \"relative\",\n        }}\n      >\n        {/* Info about Quiz */}\n        <div className=\"info\">\n          <h3 className=\"display-3\">{props.title}</h3>\n          <p className=\"lead\">{props.desc}</p>\n          <hr className=\"info-hr\" />\n        </div>\n        {inputElements}\n        <div className=\"type-ques\">\n          <label htmlFor=\"someid\" className=\"mr-3\">\n            Add Question\n          </label>\n          <div>\n            <button\n              id=\"someid\"\n              onClick={addShortAnswer}\n              className=\"mt-2 btn btn-sm btn-info\"\n            >\n              Short Answer\n            </button>\n            <button\n              onClick={addMCQ}\n              className=\"mt-2 ml-2 btn btn-sm btn-warning\"\n            >\n              MCQ\n            </button>\n          </div>\n        </div>\n        <br />\n        {allowSubmit && (\n          <button\n            onClick={handleSubmit}\n            className=\"my-3 btn btn-md btn-success\"\n            style={{\n              position: \"absolute\",\n              right: \"25px\",\n              bottom: \"5px\",\n              marginLeft: \"25px !important\",\n            }}\n          >\n            Submit\n          </button>\n        )}\n      </Container>\n    </Container>\n  );\n}\n\nfunction CreateTest(props) {\n  React.useEffect(() => {\n    props.setTitle(\"Create a new test\");\n  }, []);\n\n  document.title = \"Create Test\";\n  let { path, url } = useRouteMatch();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [redirectInfo, setRedirectInfo] = useState({ status: false });\n\n  const validate = () => {\n    if (title.length == 0) return false;\n    if (description.length == 0) return false;\n    return true;\n  };\n\n  const handleSubmit = (event) => {\n    // POST and create a new quiz code and get the id\n    // console.log(\"submitted\");\n    let res = validate();\n    if (!res) return;\n    axios\n      .post(\n        api.quiz_url,\n        {\n          title: title,\n          description: description,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${props.token}`,\n          },\n        }\n      )\n      .then((res) => {\n        setRedirectInfo({\n          status: true,\n          code: res.data.code,\n          id: res.data.id,\n        });\n      })\n      .catch((err) => console.log(err.response));\n    event.preventDefault();\n  };\n\n  if (redirectInfo.status)\n    return (\n      <div className=\"m-3\">\n        <Redirect to={`${path}/addquestions`} />\n        <Route path={`${path}/addquestions`}>\n          {\n            <AddQuestions\n              code={redirectInfo.code}\n              id={redirectInfo.id}\n              title={title}\n              desc={description}\n              token={props.token}\n            />\n          }\n        </Route>\n      </div>\n    );\n  return (\n    <Container\n      style={{ position: \"relative\" }}\n      className=\"border p-3 border test-form\"\n    >\n      <Form>\n        <Form.Group controlId=\"formTitle\">\n          <Form.Label style={{ fontSize: \"1.3rem\" }}>Title</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={title}\n            onChange={(event) => setTitle(event.target.value)}\n            placeholder=\"Test Title\"\n            required\n          />\n          <Form.Text className=\"text-muted\">\n            Enter information about the test\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formDescription\">\n          <Form.Label name=\"title\" style={{ fontSize: \"1.3rem\" }}>\n            Description\n          </Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            value={description}\n            onChange={(event) => setDescription(event.target.value)}\n            rows=\"3\"\n            placeholder=\"Test Description\"\n            required\n          />\n        </Form.Group>\n        <br />\n        <br />\n        <Button\n          style={{ position: \"absolute\", right: \"15px\", bottom: \"15px\" }}\n          onClick={handleSubmit}\n          variant=\"primary\"\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n\nexport default CreateTest;\n","import React, { useEffect } from \"react\";\nimport \"./About.css\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction About(props) {\n  document.title = \"About - QuickGrader\";\n  useEffect(() => {\n    props.setTitle(\"About\");\n  }, []);\n  return (\n    <>\n      <Typography variant=\"h4\">What is quickGrader?</Typography>\n      <Typography paragraph>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Atque adipisci\n        at laudantium, ipsum tempora iusto ut unde nulla explicabo placeat\n        repudiandae velit rem molestias esse eos. Tenetur laudantium numquam\n        maxime?\n      </Typography>\n    </>\n  );\n}\n\nexport default About;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport domain from \"../../api\";\n\nconst useStyles = makeStyles({\n  questionWithAnswer: {\n    background: \"white\",\n    borderRadius: \"7px\",\n    padding: \"8px\",\n  },\n  choiceList: {\n    background: \"red\",\n  },\n  selectedChoice: {\n    background: \"rgba(255, 0, 0, 0.5)\",\n  },\n  choice: {\n    color: \"black\",\n  },\n  question: {\n    borderBottom: \"2px solid grey\",\n    paddingBottom: \"4px\",\n  },\n  gradeButton: {\n    marginTop: \"16px\",\n    background: \"rgba(0, 100, 0, 0.3)\",\n    \"&:hover\": {\n      background: \"rgba(150, 0, 0, 0.3)\",\n    },\n  },\n});\n\nconst api = {\n  quiz_url: domain + \"test/quiz/\",\n  question_url: domain + \"test/question/\",\n  choice_url: domain + \"test/choice/\",\n  // https://localhost:8000/test/response/?quizID=286\n  response_url: domain + \"test/response/\",\n  // https://localhost:8000/test/answer/?responseID=36\n  answer_url: domain + \"test/answer/\",\n  grade_url: domain + \"test/grade/\",\n};\n\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nfunction Response(props) {\n  const { questions, responseID, choices } = props;\n  const [mapQuestionToAnswer, setMapQuestionToAnswer] = useState({});\n  const [grade, setGrade] = useState({});\n  const classes = useStyles();\n\n  const handleClick = () => {\n    console.log(\"Submitting for grading\");\n    console.log(grade);\n    axios\n      .post(\n        api.grade_url,\n        {\n          gradeInfo: grade,\n          responseID: responseID,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${props.token}`,\n          },\n        }\n      )\n      .then((res) => {\n        console.log(res);\n        props.updateResponse(responseID);\n      })\n      .catch((err) => console.error(err.response));\n  };\n\n  useEffect(() => {\n    if (responseID) {\n      axios\n        .get(api.answer_url + `?responseID=${responseID}`, {\n          headers: {\n            Authorization: `Token ${props.token}`,\n          },\n        })\n        .then((res) => {\n          let answers = res.data;\n          answers.forEach((answer) => {\n            let qID = answer.question_id;\n\n            setMapQuestionToAnswer((prevState) => ({\n              ...prevState,\n              [qID]: answer,\n            }));\n          });\n        })\n        .catch((err) => console.error(err.response));\n    }\n  }, [responseID]);\n\n  return (\n    <>\n      {Object.keys(mapQuestionToAnswer).length == questions.length && (\n        <>\n          <ListQuestionsAnswers\n            questions={questions}\n            choicesData={choices}\n            mapQuestionToAnswer={mapQuestionToAnswer}\n            setGrade={setGrade}\n            grade={grade}\n          />\n          <Grid container item>\n            <Grid item xs={5}></Grid>\n            <Grid item xs={2}>\n              <Button\n                onClick={handleClick}\n                variant=\"contained\"\n                className={classes.gradeButton}\n              >\n                Grade\n              </Button>\n            </Grid>\n            <Grid item xs={5}></Grid>\n          </Grid>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Response;\n\nfunction ListQuestionsAnswers({\n  questions,\n  mapQuestionToAnswer,\n  choicesData,\n  grade,\n  setGrade,\n}) {\n  useEffect(() => {\n    let initState = {};\n    //reset initial state\n    questions.forEach((question) => {\n      if (question.type == 1) {\n        let answer = mapQuestionToAnswer[question.id];\n        initState[answer.id] = 0;\n      }\n    });\n    setGrade(initState);\n  }, [mapQuestionToAnswer]);\n\n  const handleChange = (event) => {\n    let qID = event.target.id;\n    let val = event.target.value;\n    setGrade((prevState) => ({\n      ...prevState,\n      [qID]: val,\n    }));\n  };\n\n  let questionAnswers = questions.map((question, index) => {\n    let answer = mapQuestionToAnswer[question.id];\n    return (\n      <Grid key={`$q${question.id}a${answer.id}`} container item spacing={3}>\n        <Grid item xs={12} md={9}>\n          <QuestionWithAnswer\n            question={question}\n            choicesData={choicesData}\n            answer={answer}\n            index={index}\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <p>Max Marks: {question.maximum_score}</p>\n          {question.type == 1 && (\n            <TextField\n              label=\"Score\"\n              id={answer.id.toString()}\n              value={grade[question.id]}\n              onChange={handleChange}\n            />\n          )}\n        </Grid>\n      </Grid>\n    );\n  });\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      {questionAnswers}\n    </Grid>\n  );\n}\n\nfunction QuestionWithAnswer({ question, answer, choicesData, index }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.questionWithAnswer}>\n      <Typography paragraph className={classes.question}>\n        {index + 1}. {question.problem}\n      </Typography>\n      {question.type == 2 ? (\n        <ChoicesList\n          choices={question.choices}\n          choicesData={choicesData}\n          selectedChoice={answer.choice_id}\n        />\n      ) : (\n        answer.short_ans\n      )}\n    </div>\n  );\n}\n\nfunction ChoicesList({ choices, selectedChoice, choicesData }) {\n  const classes = useStyles();\n  let choicesList = choices.map((choice, index) => {\n    return (\n      <ListItem\n        divider={index != choices.length - 1}\n        className={\n          selectedChoice == choice ? classes.selectedChoice : classes.choice\n        }\n        key={choice}\n      >\n        <Choice choice={choicesData[choice]} key={choice} />\n      </ListItem>\n    );\n  });\n  return <List>{choicesList}</List>;\n}\n\nfunction Choice({ choice }) {\n  const classes = useStyles();\n  return <ListItemText primary={choice.choice_text}></ListItemText>;\n}\n","import React, { useState } from \"react\";\nimport { Container, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction Plagiarism() {\n  document.title = \"Plagiarism\";\n\n  const [code, setCode] = useState(\"\");\n  const [invalid, setInvalid] = useState(false);\n\n  const handleChange = (event) => {\n    let val = event.target.value;\n    setCode(val);\n  };\n\n  return (\n    <Container>\n      {invalid && (\n        <Alert variant=\"danger\" dismissible onClose={() => setInvalid(false)}>\n          Invalid code!\n        </Alert>\n      )}\n\n\n<div className=\"invitation-code h-100 mt-5\">\n        <div className=\"row align-items-center h-100\">\n          <img\n            style={{ width: \"60px\" }}\n            className=\"content-image mx-3\"\n            src={require(\"../static/images/copyright.png\")}\n          />\n          <p className=\"font-cursive\">\n          Enter the code quiz code for which you wish to analyze instances of plagiarism:\n          </p>\n        </div>\n\n        <div className=\"justify-content-center d-flex\">\n          <input\n            onChange={handleChange}\n            type=\"text\"\n            value={code}\n            name=\"code\"\n            id=\"code\"\n            className=\"p-1 code-share mx-3\"\n            style={{width: \"160px\"}}\n          />\n          <Link to={`/dashboard/plagiarism-results/${code}`}>\n            <button className=\"btn btn-sm btn-success\" style={{height: \"35px\"}}>Detect</button>\n          </Link>\n        </div>\n      </div>\n\n\n    </Container>\n  );\n}\n\nexport default Plagiarism;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Alert, Button, Container } from \"react-bootstrap\";\nimport { useHistory, Redirect } from \"react-router-dom\";\n\n// const api = {\n//   quiz_url: \"http://localhost:8000/test/quiz/\",\n//   question_url: \"http://localhost:8000/test/question/\",\n//   choice_url: \"http://localhost:8000/test/choice/\",\n//   // http://localhost:8000/test/response/?quizID=286\n//   response_url: \"http://localhost:8000/test/response/\",\n//   // http://localhost:8000/test/answer/?responseID=36\n//   answer_url: \"http://localhost:8000/test/answer/\",\n//   grade_url: \"http://localhost:8000/test/grade/\",\n//   grade_others_url: \"http://localhost:8000/ml/grade-others/\",\n//   // http://localhost:8000/ml/semi-auto-grader/314\n//   semi_grade_url: \"http://localhost:8000/ml/semi-auto-grader/\",\n// };\n\n// axios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nfunction AutoGrade(props) {\n  document.title = \"Auto Grade\";\n\n  // //   console.log(props.match.params.quizID);\n  // const [questions, setQuestions] = useState([]);\n  // const [answers, setAnswers] = useState({});\n  // const [marks, setMarks] = useState({});\n  // const [questionAnswerMapping, setQuestionAnswerMapping] = useState();\n  // const [errorMsg, setErrorMsg] = useState([]);\n  // const [redirect, setRedirect] = useState(\"\");\n  // let history = useHistory();\n\n  //   console.log(marks);\n  // console.log(questions);\n  // console.log(answers);\n  // console.log(questionAnswerMapping);\n\n//   useEffect(() => {\n//     axios\n//       .get(api.semi_grade_url + props.match.params.quizID, {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Token ${props.token}`,\n//         },\n//       })\n//       .then((res) => {\n//         console.log(res);\n//         let data = res.data;\n//         setQuestionAnswerMapping(data);\n//         for (let q_id in data) {\n//           axios\n//             .get(api.question_url + q_id + \"/\", {\n//               headers: {\n//                 \"Content-Type\": \"application/json\",\n//                 Authorization: `Token ${props.token}`,\n//               },\n//             })\n//             .then((res) => {\n//               console.log(res);\n//               setQuestions((oldState) => {\n//                 return [...oldState, res.data];\n//               });\n//             })\n//             .catch((err) => console.log(err.response));\n//           let answer_ids = data[q_id];\n//           answer_ids.forEach((id) => {\n//             axios\n//               .get(api.answer_url + id + \"/\", {\n//                 headers: {\n//                   \"Content-Type\": \"application/json\",\n//                   Authorization: `Token ${props.token}`,\n//                 },\n//               })\n//               .then((res) => {\n//                 // console.log(res);\n//                 setAnswers((oldState) => {\n//                   return { ...oldState, [id]: res.data };\n//                 });\n//               })\n//               .catch((err) => {\n//                 console.log(err.response);\n//               });\n//           });\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err.response);\n//         if (err.response.status == 400)\n//           setErrorMsg((oldMsg) => oldMsg.concat([err.response.data.message]));\n//       });\n//   }, []);\n\n//   const handleChange = (event) => {\n//     // console.log(\"changed\");\n//     let val = event.target.value;\n//     let id = event.target.id;\n//     setMarks((oldMarks) => {\n//       return { ...oldMarks, [id]: val };\n//     });\n//   };\n\n//   const handleSubmit = () => {\n//     // console.log(\"submitted\");\n//     let promises = [];\n//     Object.keys(answers).forEach((key) => {\n//       promises.push(\n//         axios.post(\n//           api.grade_url,\n//           {\n//             answerID: key,\n//             grade: marks[key],\n//             type: 2,\n//           },\n//           {\n//             headers: {\n//               \"Content-Type\": \"application/json\",\n//               Authorization: `Token ${props.token}`,\n//             },\n//           }\n//         )\n//       );\n//     });\n//     Promise.all(promises)\n//       .then((res) => {\n//         console.log(\"done here\");\n//         axios\n//           .get(api.grade_others_url + props.match.params.quizID, {\n//             headers: {\n//               \"Content-Type\": \"application/json\",\n//               Authorization: `Token ${props.token}`,\n//             },\n//           })\n//           .then((res) => {\n//             console.log(res);\n//             // history.goBack();\n//             setRedirect(\"/dashboard\");\n//           })\n//           .catch((err) => console.log(err.response));\n//       })\n//       .catch((err) => console.log(err));\n//   };\n\n//   let alertElements = errorMsg.map((ele, index) => {\n//     return <li key={index}>{ele}</li>;\n//   });\n\n//   let alert =\n//     errorMsg.length > 0 ? (\n//       <Alert\n//         variant=\"danger\"\n//         onClose={() => {\n//           setErrorMsg([]);\n//         }}\n//         dismissible\n//       >\n//         <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n//         <ul>{alertElements}</ul>\n//       </Alert>\n//     ) : null;\n\n//   let questionElements = questions.map((data, idx) => {\n//     let answerIDs = questionAnswerMapping[data.id];\n//     let answerElements = answerIDs.map((id) => {\n//       return (\n//         <div className=\"answer mt-3\" key={id}>\n//           <p>Answer: {answers[id] ? answers[id].short_ans : \"Loading...\"}</p>\n//           <div className=\"max-score mt-2\">\n//             <label htmlFor={id}>Marks:</label>\n//             <input\n//               autoComplete=\"off\"\n//               id={id}\n//               value={marks[id] || \"\"}\n//               onChange={handleChange}\n//               className=\"ml-1\"\n//               style={{ width: \"33px\" }}\n//               type=\"text\"\n//               name=\"score\"\n//             />\n//             <label htmlFor={id}>/{data.maximum_score}</label>\n//           </div>\n//           <hr className=\"info-hr\" />\n//         </div>\n//       );\n//     });\n//     return (\n//       <div\n//         className=\"response\"\n//         className=\"my-3 list-group-item list-group-item-secondary\"\n//         key={data.id}\n//         style={{ backgroundColor: \"rgba(0, 0, 0, 0.1)\" }}\n//       >\n//         <p key={data.id}>\n//           <span style={{ fontSize: \"1.2em\" }}>\n//             Question {idx + 1}. {data.problem}\n//           </span>\n//         </p>\n//         <hr className=\"info-hr\" />\n//         {answerElements}\n//       </div>\n//     );\n//   });\n\n//   if (redirect != \"\") {\n//     return (\n//       <Redirect\n//         to={{\n//           pathname: \"/dashboard\",\n//           state: {\n//             alertMsg: \"Successfully graded every response using AutoGrade\",\n//           },\n//         }}\n//       />\n//     );\n//   }\n\n//   return (\n//     <Container>\n//       {/* Error messages */}\n//       {alert}\n//       <p className=\"mt-3\" style={{ fontSize: \"1.2rem\" }}>\n//         The AI algorithm has assigned students in clusters for each answer. By\n//         grading a few instances of the cluster, other students belonging to that\n//         cluster are graded automatically.\n//       </p>\n//       <br />\n//       <br />\n//       <div style={{position: \"relative\"}}>\n//         {questionElements.length > 0 ? (\n//           <>\n//             {questionElements}\n//             <Button\n//               onClick={handleSubmit}\n//               className=\"btn btn-sm btn-success\"\n//               style={{ position: \"absolute\", right: \"0px\", marginLeft: \"25px\" }}\n//             >\n//               Submit\n//             </Button>\n//           </>\n//         ) : errorMsg.length == 0 ? (\n//           \"Loading...\"\n//         ) : null}\n//       </div>\n//     </Container>\n//   );\n  return (\n    <Container>\n      <p className=\"display-4\">Unavailable</p>\n      <p className=\"lead\">\n        All ML endpoints are unavailable due to Heroku's limited slug size which is exhausted by installing ML libraries.\n      </p>\n      \n      <p className=\"lead\">\n      Checkout the <a href=\"https://github.com/shubhamdhingra38/Quick-Grader\">GitHub repository</a> for a quick overview of these features.\n      </p>\n    </Container>\n  )\n}\n\nexport default AutoGrade;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { makeStyles } from \"@material-ui/core/\";\nimport Response from \"./Response\";\nimport domain from \"../../api\";\n\nconst useStyles = makeStyles((theme) => ({\n  responseItem: {\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  testInfo: {\n    borderRight: \"2px solid black\",\n  },\n  selectedResponse: {\n    background: theme.palette.success.main,\n  },\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nconst api = {\n  quiz_url: domain + \"test/quiz/\",\n  my_tests_url: domain + \"test/mytests/\",\n  question_url: domain + \"test/question/\",\n  lock_unlock_quiz_url: domain + \"test/quiz/lock/\",\n  choice_url: domain + \"test/choice/\",\n  // http://localhost:8000/test/response/?quizID=286\n  response_url: domain + \"test/response/\",\n  // http://localhost:8000/test/answer/?responseID=36\n  answer_url: domain + \"test/answer/\",\n};\n\nfunction ViewResponses(props) {\n  const [selectedID, setSelectedID] = useState();\n  const classes = useStyles();\n  const { responses } = props;\n\n  const handleClick = (event, responseID) => {\n    props.setResponseID(responseID);\n    setSelectedID(responseID);\n  };\n\n  // get the responses intially\n  useEffect(() => {}, []);\n\n  let responseElements = responses.map((data, index) => {\n    return (\n      <ListItem\n        divider={index == responses.length - 1 ? false : true}\n        key={data.id}\n        className={\n          selectedID == data.id\n            ? classes.selectedResponse\n            : classes.responseItem\n        }\n        onClick={(e) => {\n          handleClick(e, data.id);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={2}>\n            <AccountCircleIcon\n              style={{\n                height: 50,\n                width: 50,\n                paddingTop: \"8px\",\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={10}>\n            <p>{data.taken_by}</p>\n            {data.graded && (\n              <p style={{ fontSize: \"1.0rem\" }}>Score: {data.total_score}</p>\n            )}\n          </Grid>\n        </Grid>\n      </ListItem>\n    );\n  });\n\n  return (\n    <List disablePadding className={classes.root}>\n      {responseElements}\n    </List>\n  );\n}\n\nexport default function Test(props) {\n  const [lockStatus, setLockStatus] = useState(false);\n  const [questions, setQuestions] = useState(() => {\n    return [];\n  });\n  const [responses, setResponses] = useState([]);\n\n  const [choices, setChoices] = useState(() => {\n    return {};\n  });\n\n  const [selectedResponseID, setSelectedResponseID] = useState();\n  const classes = useStyles();\n\n  //when graded, update the response\n  const updateResponse = (responseID) => {\n    axios\n      .get(api.response_url + responseID + \"/\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${props.token}`,\n        },\n      })\n      .then((res) => {\n        setResponses(\n          [...responses].map((object) => {\n            if (object.id == responseID) {\n              return res.data;\n            } else return object;\n          })\n        );\n      })\n      .catch((err) => console.log(err.response));\n  };\n\n  // console.log(questions);\n\n  // get all the questions for the currenttest\n  useEffect(() => {\n    setLockStatus(props.data.locked);\n    if (questions.length > 0) return;\n    // console.log(\"making requests\");\n    props.data.questions.forEach((questionID, index) => {\n      axios\n        .get(api.question_url + questionID + \"/\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${props.token}`,\n          },\n        })\n        .then((res) => {\n          setQuestions((prevQuestions) => {\n            return [...prevQuestions, res.data];\n          });\n          if (res.data.type == 2) {\n            getChoices(res.data);\n          }\n        })\n        .catch((err) => console.log(err.response));\n    });\n\n    axios\n      .get(api.response_url, {\n        params: {\n          quizID: props.data.id,\n        },\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${props.token}`,\n        },\n      })\n      .then((res) => {\n        setResponses(res.data);\n      })\n      .catch((err) => console.log(err.response));\n  }, []);\n\n  useEffect(() => {\n    // console.log(questions);\n    localStorage.setItem(`question${props.data.id}`, JSON.stringify(questions));\n  }, [questions]);\n\n  useEffect(() => {\n    localStorage.setItem(`choices${props.data.id}`, JSON.stringify(choices));\n  }, [choices]);\n\n  const getChoices = (data) => {\n    let choices = data.choices;\n    let promises = [];\n    let choiceId;\n    for (choiceId in choices) {\n      promises.push(\n        axios.get(api.choice_url + choices[choiceId] + \"/\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${props.token}`,\n          },\n        })\n      );\n    }\n    Promise.all(promises).then((res) => {\n      res.forEach((choice) => {\n        // choices.push([choice.data.id, choice.data.choice_text]);\n        setChoices((oldState) => {\n          return {\n            ...oldState,\n            [choice.data.id]: choice.data,\n          };\n        });\n      });\n      // setQuestions(oldArray => [...oldArray, [data, choices]]);\n    });\n    // console.log(choices);\n  };\n\n  const changeLockStatus = () => {\n    axios\n      .get(api.lock_unlock_quiz_url + props.data.code + \"/\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${props.token}`,\n        },\n      })\n      .then((res) => setLockStatus(!lockStatus))\n      .catch((err) => console.log(err));\n  };\n\n  if (questions.length == 0) return null;\n\n  return (\n    <>\n      <Container className=\"test-form my-5 border p-3\">\n        <Grid container spacing={4}>\n          <Grid\n            container\n            item\n            direction=\"column\"\n            xs={12}\n            md={4}\n            className={classes.testInfo}\n          >\n            <Grid item>\n              <h3>{props.data.title}</h3>\n            </Grid>\n            <Grid item>\n              <p>{props.data.description}</p>\n            </Grid>\n\n            <Grid container item spacing={2}>\n              {\" \"}\n              <Grid item xs={6}>\n                <p\n                  style={{\n                    color: \"black\",\n                    padding: \"5px\",\n                    maxWidth: \"100px\",\n                    fontSize: \"16px\",\n                    letterSpacing: \"2px\",\n                    border: \"2px solid green\",\n                    background: \"rgba(0, 100, 0, 0.3)\",\n                  }}\n                >\n                  {props.data.code}\n                </p>\n              </Grid>\n              <Grid item xs={2}>\n                <Button\n                  size=\"small\"\n                  variant=\"outlined\"\n                  onClick={() => {\n                    console.log(\"code\", props.data.code, \"copied\");\n                    navigator.clipboard.writeText(props.data.code);\n                  }}\n                >\n                  Copy\n                </Button>\n              </Grid>\n            </Grid>\n            <Divider />\n\n            <Grid container item direction=\"column\">\n              <Grid item>\n                <Typography variant=\"h6\">Responses</Typography>\n                <p style={{ fontSize: \"0.8rem\" }}>\n                  Click the responses to grade them manually.\n                </p>\n              </Grid>\n              <Grid item>\n                <ViewResponses\n                  setResponseID={setSelectedResponseID}\n                  questions={questions}\n                  token={props.token}\n                  responses={responses}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={12} md={8}>\n            <Response\n              choices={choices}\n              questions={questions}\n              responseID={selectedResponseID}\n              updateResponse={updateResponse}\n              token={props.token}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n      <Divider />\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Test from \"../Test/Test\";\nimport Container from \"@material-ui/core/Container\";\nimport domain from \"../../api\";\n\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nconst api = {\n  quiz_url: domain + \"test/quiz/\",\n  my_tests_url: domain + \"test/mytests/\",\n  question_url: domain + \"test/question/\",\n  lock_unlock_quiz_url: domain + \"test/quiz/lock/\",\n  choice_url: domain + \"test/choice/\",\n  // http://localhost:8000/test/response/?quizID=286\n  response_url: domain + \"test/response/\",\n  // http://localhost:8000/test/answer/?responseID=36\n  answer_url: domain + \"test/answer/\",\n};\n\nfunction ShowTests(props) {\n  let testElements = props.data.map((data) => {\n    return (\n      <div key={data.id}>\n        <Test data={data} key={data.id} token={props.token} />\n      </div>\n    );\n  });\n  return <Container>{testElements}</Container>;\n}\n\nfunction CreatedTests(props) {\n  React.useEffect(() => {\n    props.setTitle(\"Grade Tests [Manually]\");\n  }, []);\n  const [myTests, setMyTests] = useState(null);\n  // console.log(myTests);\n\n  // get list of all tests created by the current user\n  useEffect(() => {\n    if (props.token) {\n      axios\n        .get(api.my_tests_url, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${props.token}`,\n          },\n        })\n        .then((res) => {\n          setMyTests(res.data);\n        })\n        .catch((err) => console.log(err.response));\n    }\n  }, [props.token]);\n\n  return myTests ? (\n    <ShowTests data={myTests} token={props.token} />\n  ) : (\n    <Container\n      className={\"body-text text-center\"}\n      style={{ fontSize: \"2.5rem\" }}\n    >\n      Loading...\n      <img\n        style={{ width: \"30px\" }}\n        className=\"content-image mx-3\"\n        src={require(\"../static/images/loading.png\")}\n      />\n    </Container>\n  );\n}\n\nexport default CreatedTests;\n","import React, { useState } from \"react\";\nimport { Container, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport domain from \"../../api\";\n\nconst api = {\n  report_generation_url: domain + \"test/report/\",\n};\n\nfunction GenerateReport(props) {\n  React.useEffect(() => {\n    props.setTitle(\"Download Report\");\n  }, []);\n\n  const [code, setCode] = useState(\"\");\n  const [invalid, setInvalid] = useState(false);\n\n  // console.log(code);\n\n  const handleChange = (event) => {\n    let val = event.target.value;\n    setCode(val);\n  };\n\n  const handleSubmit = () => {\n    axios({\n      url: api.report_generation_url + code + \"/\",\n      method: \"GET\",\n      responseType: \"blob\", // important\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${props.token}`,\n      },\n    })\n      .then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"result.csv\"); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n      })\n      .catch((err) => setInvalid(true));\n  };\n\n  return (\n    <Container>\n      {invalid && (\n        <Alert variant=\"danger\" dismissible onClose={() => setInvalid(false)}>\n          Invalid code!\n        </Alert>\n      )}\n\n      <div className=\"invitation-code h-100 mt-5\">\n        <div className=\"row align-items-center h-100\">\n          <img\n            style={{ width: \"50px\" }}\n            className=\"content-image mx-3\"\n            src={require(\"../static/images/csv.png\")}\n          />\n          <p className=\"font-cursive\">\n            Enter the code quiz code for which you wish to download the report:\n          </p>\n        </div>\n\n        <div className=\"justify-content-center d-flex\">\n          <input\n            onChange={handleChange}\n            type=\"text\"\n            value={code}\n            name=\"code\"\n            id=\"code\"\n            className=\"p-1 code-share mx-3\"\n            style={{ width: \"160px\" }}\n          />\n          <button onClick={handleSubmit} className=\"btn btn-sm btn-success\">\n            Download\n          </button>\n        </div>\n      </div>\n    </Container>\n  );\n}\nexport default GenerateReport;\n","import React, { useEffect, useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useAlert } from \"react-alert\";\nimport domain from \"../../api\";\n\nconst api = {\n  auth_url: domain + \"auth/token/\",\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"rgb(0, 0, 0)\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color: \"white\",\n    backgroundColor: \"black\",\n    \"&:hover\": {\n      background: \"#3f51b5\",\n    },\n  },\n}));\n\nexport default function Login(props) {\n  useEffect(() => {\n    props.setTitle(\"Sign In\");\n  }, []);\n  const classes = useStyles();\n  const [creds, setCreds] = useState({ username: \"\", password: \"\" }); //user credentials\n  const alert = useAlert();\n\n  const [redirect, setRedirect] = useState(false);\n  // const [token, setToken] = useState(null);\n\n  // console.log(creds);\n  // console.log(token);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let data = JSON.stringify(creds);\n    axios\n      .post(api.auth_url, data, {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        console.log(res);\n        props.setToken(res.data.token);\n        setRedirect(true);\n      })\n      .catch((err) => {\n        console.error(err.response);\n        alert.show(\"Invalid credentials!\", {\n          timeout: 4000,\n          type: \"error\",\n        });\n      });\n  };\n\n  const handleChange = (e) => {\n    let name = e.target.name;\n    let val = e.target.value;\n    setCreds((oldState) => {\n      return { ...oldState, [name]: val };\n    });\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n\n  return (\n    <Container\n      component=\"main\"\n      className=\"test-form border mt-5 p-3\"\n      style={{ maxWidth: \"300px\" }}\n    >\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={handleChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleChange}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n            checked\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            style={{ color: \"rgba(0, 0, 0, 1) !important\" }}\n            onClick={handleSubmit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link to=\"/register\" variant=\"body2\">\n                Don't have an account? Sign Up\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction Logout(props) {\n  const { token, setToken } = props;\n  useEffect(() => {\n    props.setTitle(\"Sign Out\");\n  }, []);\n  useEffect(() => {\n    if (token) {\n      setToken(null);\n    }\n  }, []);\n  if (!token) {\n    return (\n      <>\n        <Typography>You are not logged in!</Typography>\n      </>\n    );\n  }\n  return (\n    <>\n      <Typography>You have been logged out.</Typography>\n    </>\n  );\n}\n\nexport default Logout;\n","import React, { useState, useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\nimport { Alert } from \"react-bootstrap\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport domain from \"../../api\";\n\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\nconst api = {\n  auth_url: domain + \"auth/users/\",\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"rgb(0, 0, 0)\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color: \"white\",\n    backgroundColor: \"rgb(0, 0, 0)\",\n  },\n}));\n\nfunction SignUp(props) {\n  const classes = useStyles();\n  const [creds, setCreds] = useState({ username: \"\", password: \"\" }); //user credentials\n  const [redirect, setRedirect] = useState(false);\n  const alert = useAlert();\n  // console.log(creds);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(creds);\n    creds[\"group\"] = props.type;\n    axios\n      .post(api.auth_url, creds, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        console.log(res);\n        setRedirect(true);\n      })\n      .catch((err) => {\n        let errors = err.response.data;\n        Object.keys(errors).forEach((error) => {\n          alert.show(`Required field ${error}`, {\n            timeout: 4000,\n            type: \"error\",\n          });\n        });\n      });\n  };\n\n  const handleChange = (e) => {\n    let name = e.target.name;\n    let val = e.target.value;\n    setCreds((oldValue) => {\n      return { ...oldValue, [name]: val };\n    });\n  };\n\n  if (redirect) return <Redirect to=\"/login\"></Redirect>;\n\n  return (\n    <Container style={{ maxWidth: \"400px\" }}>\n      <Container className=\"test-form border mt-5 p-3\" component=\"main\">\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}></Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  onChange={handleChange}\n                  autoComplete=\"fname\"\n                  name=\"firstname\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstname\"\n                  label=\"First Name\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  onChange={handleChange}\n                  variant=\"outlined\"\n                  fullWidth\n                  id=\"lastname\"\n                  label=\"Last Name\"\n                  name=\"lastname\"\n                  autoComplete=\"lname\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  onChange={handleChange}\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  onChange={handleChange}\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  onChange={handleChange}\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={handleSubmit}\n            >\n              Sign Up\n            </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link to=\"/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </Container>\n  );\n}\n\nfunction Register(props) {\n  useEffect(() => {\n    props.setTitle(\"Sign Up\");\n  }, []);\n  document.title = \"Register\";\n  const [showSignUp, setShowSignUp] = useState(false);\n  const [type, setType] = useState(null); //teacher or student\n  if (showSignUp) return <SignUp type={type} />;\n  return (\n    // <SignUp/>\n    <Container className=\"mt-5\">\n      <div class=\"row\">\n        <div class=\"container col-md-5 col-sm-12\">\n          <h3 class=\"title\">Student</h3>\n          <div class=\"content w-100\">\n            <button\n              className=\"btn\"\n              onClick={() => {\n                setShowSignUp(true);\n                setType(\"Student\");\n              }}\n            >\n              <div class=\"content-overlay\"></div>\n              <img\n                className=\"content-image w-100 mx-0\"\n                src={require(\"../static/images/student.jpg\")}\n              />\n              <div class=\"content-details fadeIn-top fadeIn-left\">\n                <h3>Register</h3>\n                <p>Click here to register as a student.</p>\n              </div>\n            </button>\n          </div>\n        </div>\n        <div class=\"container col-md-5 col-sm-12\">\n          <h3 class=\"title\">Teacher</h3>\n          <div class=\"content w-100\">\n            <button\n              className=\"btn\"\n              onClick={() => {\n                setShowSignUp(true);\n                setType(\"Faculty\");\n              }}\n            >\n              <div class=\"content-overlay\"></div>\n              <img\n                className=\"content-image w-100 mx-0\"\n                src={require(\"../static/images/teacher.jpg\")}\n              />\n              <div class=\"content-details fadeIn-top fadeIn-right\">\n                <h3>Register</h3>\n                <p>Click here to register as a teacher.</p>\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n      <p\n        class=\"d-flex justify-content-center mt-4\"\n        style={{ flexWrap: \"wrap\" }}\n      >\n        Already have an account? Click\n        <Link to=\"/login\" color=\"blue\">\n          &nbsp;here&nbsp;\n        </Link>\n        to login\n      </p>\n    </Container>\n  );\n}\n\nexport default Register;\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./components/Home\";\nimport TakeTest from \"./components/Test/TakeTest\";\nimport CreateTest from \"./components/Test/CreateTest\";\nimport About from \"./components/About/About\";\nimport Profile from \"./components/Profile/Profile\"\nimport Response from \"./components/Test/Response\";\nimport PlagiarismResults from \"./components/Dashboard/PlagiarismResults\";\nimport Plagiarism from \"./components/Dashboard/Plagiarism\";\nimport AutoGrade from \"./components/Dashboard/AutoGrade\";\nimport CreatedTests from \"./components/Dashboard/CreatedTests\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport GenerateReport from \"./components/Dashboard/GenerateReport\";\nimport Login from \"./components/Auth/Login\";\nimport Logout from './components/Auth/Logout'\nimport Register from \"./components/Auth/Register\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  toolbar: theme.mixins.toolbar,\n}));\n\n\n\nexport default function App() {\n\n  const [token, setToken] = React.useState();\n  const [title, setTitle] = React.useState(\"quickGrader\");\n  const classes = useStyles();\n\n\n  const setNewToken = (val) => {\n    console.log(\"setToken called\");\n    setToken(val);\n    if(!val){\n      localStorage.removeItem(\"token\")\n    } else{\n\n    localStorage.setItem(\"token\", val);\n    }\n  };\n\n\n\n\n  React.useEffect(()=>{\n    if(localStorage.token){\n      setToken(localStorage.token)\n    }\n\n  }, [])\n\n\n\n\n  return (\n    <Router>\n      <div style={{ display: \"flex\"}} className=\"mt-5\">\n        <Main title={title} token={token} />\n        <div className={classes.content}>\n          <div className={classes.toolbar}/>\n          <Switch>\n            <Route  exact path=\"/home\" render={(props) => <Home setTitle={setTitle} {...props} />} />\n            <Route exact path=\"/about\">\n              <About token={token} setTitle={setTitle}/>\n            </Route>\n            <Route exact path=\"/dashboard/created-tests\">\n              <CreatedTests token={token} setTitle={setTitle}/>\n            </Route>\n            <Route\n              path=\"/dashboard/generate-report\"\n            >\n              <GenerateReport setTitle={setTitle}/>\n            </Route>\n            <Route\n              path=\"/dashboard/created-tests/response/:responseID\"\n              render={(props) => <Response token={token} {...props} />}\n            />\n            <Route path=\"/dashboard/plagiarism/\">\n              <Plagiarism token={token} />\n            </Route>\n            <Route\n              path=\"/dashboard/plagiarism-results/:quizID\"\n              render={(props) => <PlagiarismResults token={token} {...props} />}\n            ></Route>\n            <Route\n              path=\"/dashboard/created-tests/autograde/:quizID\"\n              render={(props) => <AutoGrade token={token} {...props} />}\n            ></Route>\n          </Switch>\n          <Route path=\"/take-test\">\n            <TakeTest token={token} />\n          </Route>\n          <Route path=\"/login\">\n            <Login setTitle={setTitle} setToken={setNewToken} />\n          </Route>\n          <Route path=\"/register\">\n            <Register setTitle={setTitle} />\n          </Route>\n           <Route path=\"/logout\">\n            <Logout setTitle={setTitle} token={token} setToken={setNewToken}/>\n          </Route>\n          <Route path=\"/account\">\n            <Profile token={token} setTitle={setTitle}/>\n          </Route>\n          <Switch>\n            <Route path=\"/create-test\">\n              <CreateTest setTitle={setTitle} token={token} />\n            </Route>\n          </Switch>\n        </div>\n\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport AlertTemplate from 'react-alert-template-basic'\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\n\n\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.BOTTOM_RIGHT,\n  timeout: 5000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n}\n\nconst Root = () => (\n  <AlertProvider template={AlertTemplate} {...options}>\n    <App />\n  </AlertProvider>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}